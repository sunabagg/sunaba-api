package sunaba.godot;

import sunaba.core.NativeEvent;

@:native("godot.TextServer")
extern class TextServer extends RefCounted {
    @:native("__new")
    public function new();
    public static function createFont(): RID;
    public static function createFontLinkedVariation(fontRid: RID): RID;
    public static function createShapedText(direction: Int = 0, orientation: Int = 0): RID;
    public static function drawHexCodeBox(canvas: RID, size: Int, pos: GdVector2, index: Int, color: Color): Void;
    public static function fontClearGlyphs(fontRid: RID, size: GdVector2i): Void;
    public static function fontClearKerningMap(fontRid: RID, size: Int): Void;
    public static function fontClearSizeCache(fontRid: RID): Void;
    public static function fontClearTextures(fontRid: RID, size: GdVector2i): Void;
    public static function fontDrawGlyph(fontRid: RID, canvas: RID, size: Int, pos: GdVector2, index: Int, color: Color): Void;
    public static function fontDrawGlyphOutline(fontRid: RID, canvas: RID, size: Int, outlineSize: Int, pos: GdVector2, index: Int, color: Color): Void;
    public static function fontGetAntialiasing(fontRid: RID): Int;
    public static function fontGetAscent(fontRid: RID, size: Int): Float;
    public static function fontGetBaselineOffset(fontRid: RID): Float;
    public static function fontGetCharFromGlyphIndex(fontRid: RID, size: Int, glyphIndex: Int): Int;
    public static function fontGetDescent(fontRid: RID, size: Int): Float;
    public static function fontGetDisableEmbeddedBitmaps(fontRid: RID): Bool;
    public static function fontGetEmbolden(fontRid: RID): Float;
    public static function fontGetFaceCount(fontRid: RID): Int;
    public static function fontGetFaceIndex(fontRid: RID): Int;
    public static function fontGetFixedSize(fontRid: RID): Int;
    public static function fontGetFixedSizeScaleMode(fontRid: RID): Int;
    public static function fontGetGenerateMipmaps(fontRid: RID): Bool;
    public static function fontGetGlobalOversampling(): Float;
    public static function fontGetGlyphAdvance(fontRid: RID, size: Int, glyph: Int): Vector2;
    public static function fontGetGlyphContours(font: RID, size: Int, index: Int): Map<Dynamic, Dynamic>;
    public static function fontGetGlyphIndex(fontRid: RID, size: Int, char: Int, variationSelector: Int): Int;
    public static function fontGetGlyphList(fontRid: RID, size: GdVector2i): PackedInt32Array;
    public static function fontGetGlyphOffset(fontRid: RID, size: GdVector2i, glyph: Int): Vector2;
    public static function fontGetGlyphSize(fontRid: RID, size: GdVector2i, glyph: Int): Vector2;
    public static function fontGetGlyphTextureIdx(fontRid: RID, size: GdVector2i, glyph: Int): Int;
    public static function fontGetGlyphTextureRid(fontRid: RID, size: GdVector2i, glyph: Int): RID;
    public static function fontGetGlyphTextureSize(fontRid: RID, size: GdVector2i, glyph: Int): Vector2;
    public static function fontGetGlyphUvRect(fontRid: RID, size: GdVector2i, glyph: Int): Rect2;
    public static function fontGetHinting(fontRid: RID): Int;
    public static function fontGetKeepRoundingRemainders(fontRid: RID): Bool;
    public static function fontGetKerning(fontRid: RID, size: Int, glyphPair: GdVector2i): Vector2;
    public static function fontGetKerningList(fontRid: RID, size: Int): Dynamic;
    public static function fontGetLanguageSupportOverride(fontRid: RID, language: String): Bool;
    public static function fontGetLanguageSupportOverrides(fontRid: RID): PackedStringArray;
    public static function fontGetMsdfPixelRange(fontRid: RID): Int;
    public static function fontGetMsdfSize(fontRid: RID): Int;
    public static function fontGetName(fontRid: RID): String;
    public static function fontGetOpentypeFeatureOverrides(fontRid: RID): Map<Dynamic, Dynamic>;
    public static function fontGetOtNameStrings(fontRid: RID): Map<Dynamic, Dynamic>;
    public static function fontGetOversampling(fontRid: RID): Float;
    public static function fontGetScale(fontRid: RID, size: Int): Float;
    public static function fontGetScriptSupportOverride(fontRid: RID, script: String): Bool;
    public static function fontGetScriptSupportOverrides(fontRid: RID): PackedStringArray;
    public static function fontGetSizeCacheList(fontRid: RID): Dynamic;
    public static function fontGetSpacing(fontRid: RID, spacing: Int): Int;
    public static function fontGetStretch(fontRid: RID): Int;
    public static function fontGetStyle(fontRid: RID): Int;
    public static function fontGetStyleName(fontRid: RID): String;
    public static function fontGetSubpixelPositioning(fontRid: RID): Int;
    public static function fontGetSupportedChars(fontRid: RID): String;
    public static function fontGetSupportedGlyphs(fontRid: RID): PackedInt32Array;
    public static function fontGetTextureCount(fontRid: RID, size: GdVector2i): Int;
    public static function fontGetTextureImage(fontRid: RID, size: GdVector2i, textureIndex: Int): Image;
    public static function fontGetTextureOffsets(fontRid: RID, size: GdVector2i, textureIndex: Int): PackedInt32Array;
    public static function fontGetTransform(fontRid: RID): Transform2D;
    public static function fontGetUnderlinePosition(fontRid: RID, size: Int): Float;
    public static function fontGetUnderlineThickness(fontRid: RID, size: Int): Float;
    public static function fontGetVariationCoordinates(fontRid: RID): Map<Dynamic, Dynamic>;
    public static function fontGetWeight(fontRid: RID): Int;
    public static function fontHasChar(fontRid: RID, char: Int): Bool;
    public static function fontIsAllowSystemFallback(fontRid: RID): Bool;
    public static function fontIsForceAutohinter(fontRid: RID): Bool;
    public static function fontIsLanguageSupported(fontRid: RID, language: String): Bool;
    public static function fontIsMultichannelSignedDistanceField(fontRid: RID): Bool;
    public static function fontIsScriptSupported(fontRid: RID, script: String): Bool;
    public static function fontRemoveGlyph(fontRid: RID, size: GdVector2i, glyph: Int): Void;
    public static function fontRemoveKerning(fontRid: RID, size: Int, glyphPair: GdVector2i): Void;
    public static function fontRemoveLanguageSupportOverride(fontRid: RID, language: String): Void;
    public static function fontRemoveScriptSupportOverride(fontRid: RID, script: String): Void;
    public static function fontRemoveSizeCache(fontRid: RID, size: GdVector2i): Void;
    public static function fontRemoveTexture(fontRid: RID, size: GdVector2i, textureIndex: Int): Void;
    public static function fontRenderGlyph(fontRid: RID, size: GdVector2i, index: Int): Void;
    public static function fontRenderRange(fontRid: RID, size: GdVector2i, start: Int, end: Int): Void;
    public static function fontSetAllowSystemFallback(fontRid: RID, allowSystemFallback: Bool): Void;
    public static function fontSetAntialiasing(fontRid: RID, antialiasing: Int): Void;
    public static function fontSetAscent(fontRid: RID, size: Int, ascent: Float): Void;
    public static function fontSetBaselineOffset(fontRid: RID, baselineOffset: Float): Void;
    public static function fontSetData(fontRid: RID, data: PackedByteArray): Void;
    public static function fontSetDescent(fontRid: RID, size: Int, descent: Float): Void;
    public static function fontSetDisableEmbeddedBitmaps(fontRid: RID, disableEmbeddedBitmaps: Bool): Void;
    public static function fontSetEmbolden(fontRid: RID, strength: Float): Void;
    public static function fontSetFaceIndex(fontRid: RID, faceIndex: Int): Void;
    public static function fontSetFixedSize(fontRid: RID, fixedSize: Int): Void;
    public static function fontSetFixedSizeScaleMode(fontRid: RID, fixedSizeScaleMode: Int): Void;
    public static function fontSetForceAutohinter(fontRid: RID, forceAutohinter: Bool): Void;
    public static function fontSetGenerateMipmaps(fontRid: RID, generateMipmaps: Bool): Void;
    public static function fontSetGlobalOversampling(oversampling: Float): Void;
    public static function fontSetGlyphAdvance(fontRid: RID, size: Int, glyph: Int, advance: GdVector2): Void;
    public static function fontSetGlyphOffset(fontRid: RID, size: GdVector2i, glyph: Int, offset: GdVector2): Void;
    public static function fontSetGlyphSize(fontRid: RID, size: GdVector2i, glyph: Int, glSize: GdVector2): Void;
    public static function fontSetGlyphTextureIdx(fontRid: RID, size: GdVector2i, glyph: Int, textureIdx: Int): Void;
    public static function fontSetGlyphUvRect(fontRid: RID, size: GdVector2i, glyph: Int, uvRect: Rect2): Void;
    public static function fontSetHinting(fontRid: RID, hinting: Int): Void;
    public static function fontSetKeepRoundingRemainders(fontRid: RID, keepRoundingRemainders: Bool): Void;
    public static function fontSetKerning(fontRid: RID, size: Int, glyphPair: GdVector2i, kerning: GdVector2): Void;
    public static function fontSetLanguageSupportOverride(fontRid: RID, language: String, supported: Bool): Void;
    public static function fontSetMsdfPixelRange(fontRid: RID, msdfPixelRange: Int): Void;
    public static function fontSetMsdfSize(fontRid: RID, msdfSize: Int): Void;
    public static function fontSetMultichannelSignedDistanceField(fontRid: RID, msdf: Bool): Void;
    public static function fontSetName(fontRid: RID, name: String): Void;
    public static function fontSetOpentypeFeatureOverrides(fontRid: RID, overrides: Map<Dynamic, Dynamic>): Void;
    public static function fontSetOversampling(fontRid: RID, oversampling: Float): Void;
    public static function fontSetScale(fontRid: RID, size: Int, scale: Float): Void;
    public static function fontSetScriptSupportOverride(fontRid: RID, script: String, supported: Bool): Void;
    public static function fontSetSpacing(fontRid: RID, spacing: Int, value: Int): Void;
    public static function fontSetStretch(fontRid: RID, weight: Int): Void;
    public static function fontSetStyle(fontRid: RID, style: Int): Void;
    public static function fontSetStyleName(fontRid: RID, name: String): Void;
    public static function fontSetSubpixelPositioning(fontRid: RID, subpixelPositioning: Int): Void;
    public static function fontSetTextureImage(fontRid: RID, size: GdVector2i, textureIndex: Int, image: Image): Void;
    public static function fontSetTextureOffsets(fontRid: RID, size: GdVector2i, textureIndex: Int, offset: PackedInt32Array): Void;
    public static function fontSetTransform(fontRid: RID, transform: Transform2D): Void;
    public static function fontSetUnderlinePosition(fontRid: RID, size: Int, underlinePosition: Float): Void;
    public static function fontSetUnderlineThickness(fontRid: RID, size: Int, underlineThickness: Float): Void;
    public static function fontSetVariationCoordinates(fontRid: RID, variationCoordinates: Map<Dynamic, Dynamic>): Void;
    public static function fontSetWeight(fontRid: RID, weight: Int): Void;
    public static function fontSupportedFeatureList(fontRid: RID): Map<Dynamic, Dynamic>;
    public static function fontSupportedVariationList(fontRid: RID): Map<Dynamic, Dynamic>;
    public static function formatNumber(number: String, language: String): String;
    public static function freeRid(rid: RID): Void;
    public static function getFeatures(): Int;
    public static function getHexCodeBoxSize(size: Int, index: Int): Vector2;
    public static function getName(): String;
    public static function getSupportData(): PackedByteArray;
    public static function getSupportDataFilename(): String;
    public static function getSupportDataInfo(): String;
    public static function has(rid: RID): Bool;
    public static function hasFeature(feature: Int): Bool;
    public static function isConfusable(string: String, dict: PackedStringArray): Int;
    public static function isLocaleRightToLeft(locale: String): Bool;
    public static function isValidIdentifier(string: String): Bool;
    public static function isValidLetter(unicode: Int): Bool;
    public static function loadSupportData(filename: String): Bool;
    public static function nameToTag(name: String): Int;
    public static function parseNumber(number: String, language: String): String;
    public static function parseStructuredText(parserType: Int, args: Array<Dynamic>, text: String): Dynamic;
    public static function percentSign(language: String): String;
    public static function saveSupportData(filename: String): Bool;
    public static function shapedGetSpanCount(shaped: RID): Int;
    public static function shapedGetSpanEmbeddedObject(shaped: RID, index: Int): Variant;
    public static function shapedGetSpanMeta(shaped: RID, index: Int): Variant;
    public static function shapedSetSpanUpdateFont(shaped: RID, index: Int, fonts: Dynamic, size: Int, opentypeFeatures: Map<Dynamic, Dynamic>): Void;
    public static function shapedTextAddObject(shaped: RID, key: Variant, size: GdVector2, inlineAlign: Int = 5, length: Int = 1, baseline: Float = 0.0): Bool;
    public static function shapedTextAddString(shaped: RID, text: String, fonts: Dynamic, size: Int, opentypeFeatures: Map<Dynamic, Dynamic>, language: String, meta: Variant): Bool;
    public static function shapedTextClear(rid: RID): Void;
    public static function shapedTextClosestCharacterPos(shaped: RID, pos: Int): Int;
    public static function shapedTextDraw(shaped: RID, canvas: RID, pos: GdVector2, clipL: Float = -1, clipR: Float = -1, color: Color): Void;
    public static function shapedTextDrawOutline(shaped: RID, canvas: RID, pos: GdVector2, clipL: Float = -1, clipR: Float = -1, outlineSize: Int = 1, color: Color): Void;
    public static function shapedTextFitToWidth(shaped: RID, width: Float, justificationFlags: Int = 3): Float;
    public static function shapedTextGetAscent(shaped: RID): Float;
    public static function shapedTextGetCarets(shaped: RID, position: Int): Map<Dynamic, Dynamic>;
    public static function shapedTextGetCharacterBreaks(shaped: RID): PackedInt32Array;
    public static function shapedTextGetCustomEllipsis(shaped: RID): Int;
    public static function shapedTextGetCustomPunctuation(shaped: RID): String;
    public static function shapedTextGetDescent(shaped: RID): Float;
    public static function shapedTextGetDirection(shaped: RID): Int;
    public static function shapedTextGetDominantDirectionInRange(shaped: RID, start: Int, end: Int): Int;
    public static function shapedTextGetEllipsisGlyphCount(shaped: RID): Int;
    public static function shapedTextGetEllipsisGlyphs(shaped: RID): Dynamic;
    public static function shapedTextGetEllipsisPos(shaped: RID): Int;
    public static function shapedTextGetGlyphCount(shaped: RID): Int;
    public static function shapedTextGetGlyphs(shaped: RID): Dynamic;
    public static function shapedTextGetGraphemeBounds(shaped: RID, pos: Int): Vector2;
    public static function shapedTextGetInferredDirection(shaped: RID): Int;
    public static function shapedTextGetLineBreaks(shaped: RID, width: Float, start: Int = 0, breakFlags: Int = 3): PackedInt32Array;
    public static function shapedTextGetLineBreaksAdv(shaped: RID, width: PackedFloat32Array, start: Int = 0, once: Bool = true, breakFlags: Int = 3): PackedInt32Array;
    public static function shapedTextGetObjectGlyph(shaped: RID, key: Variant): Int;
    public static function shapedTextGetObjectRange(shaped: RID, key: Variant): Vector2i;
    public static function shapedTextGetObjectRect(shaped: RID, key: Variant): Rect2;
    public static function shapedTextGetObjects(shaped: RID): Array<Dynamic>;
    public static function shapedTextGetOrientation(shaped: RID): Int;
    public static function shapedTextGetParent(shaped: RID): RID;
    public static function shapedTextGetPreserveControl(shaped: RID): Bool;
    public static function shapedTextGetPreserveInvalid(shaped: RID): Bool;
    public static function shapedTextGetRange(shaped: RID): Vector2i;
    public static function shapedTextGetSelection(shaped: RID, start: Int, end: Int): PackedVector2Array;
    public static function shapedTextGetSize(shaped: RID): Vector2;
    public static function shapedTextGetSpacing(shaped: RID, spacing: Int): Int;
    public static function shapedTextGetTrimPos(shaped: RID): Int;
    public static function shapedTextGetUnderlinePosition(shaped: RID): Float;
    public static function shapedTextGetUnderlineThickness(shaped: RID): Float;
    public static function shapedTextGetWidth(shaped: RID): Float;
    public static function shapedTextGetWordBreaks(shaped: RID, graphemeFlags: Int = 264, skipGraphemeFlags: Int = 4): PackedInt32Array;
    public static function shapedTextHasVisibleChars(shaped: RID): Bool;
    public static function shapedTextHitTestGrapheme(shaped: RID, coords: Float): Int;
    public static function shapedTextHitTestPosition(shaped: RID, coords: Float): Int;
    public static function shapedTextIsReady(shaped: RID): Bool;
    public static function shapedTextNextCharacterPos(shaped: RID, pos: Int): Int;
    public static function shapedTextNextGraphemePos(shaped: RID, pos: Int): Int;
    public static function shapedTextOverrunTrimToWidth(shaped: RID, width: Float = 0, overrunTrimFlags: Int = 0): Void;
    public static function shapedTextPrevCharacterPos(shaped: RID, pos: Int): Int;
    public static function shapedTextPrevGraphemePos(shaped: RID, pos: Int): Int;
    public static function shapedTextResizeObject(shaped: RID, key: Variant, size: GdVector2, inlineAlign: Int = 5, baseline: Float = 0.0): Bool;
    public static function shapedTextSetBidiOverride(shaped: RID, override: Array<Dynamic>): Void;
    public static function shapedTextSetCustomEllipsis(shaped: RID, char: Int): Void;
    public static function shapedTextSetCustomPunctuation(shaped: RID, punct: String): Void;
    public static function shapedTextSetDirection(shaped: RID, direction: Int = 0): Void;
    public static function shapedTextSetOrientation(shaped: RID, orientation: Int = 0): Void;
    public static function shapedTextSetPreserveControl(shaped: RID, enabled: Bool): Void;
    public static function shapedTextSetPreserveInvalid(shaped: RID, enabled: Bool): Void;
    public static function shapedTextSetSpacing(shaped: RID, spacing: Int, value: Int): Void;
    public static function shapedTextShape(shaped: RID): Bool;
    public static function shapedTextSortLogical(shaped: RID): Dynamic;
    public static function shapedTextSubstr(shaped: RID, start: Int, length: Int): RID;
    public static function shapedTextTabAlign(shaped: RID, tabStops: PackedFloat32Array): Float;
    public static function spoofCheck(string: String): Bool;
    public static function stringGetCharacterBreaks(string: String, language: String): PackedInt32Array;
    public static function stringGetWordBreaks(string: String, language: String, charsPerLine: Int = 0): PackedInt32Array;
    public static function stringToLower(string: String, language: String): String;
    public static function stringToTitle(string: String, language: String): String;
    public static function stringToUpper(string: String, language: String): String;
    public static function stripDiacritics(string: String): String;
    public static function tagToName(tag: Int): String;
}
